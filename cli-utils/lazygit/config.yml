gui:
  # stuff relating to the UI
  windowSize: "normal" # one of 'normal' | 'half' | 'full' default is 'normal'
  scrollHeight: 2 # how many lines you scroll by
  scrollPastBottom: true # enable scrolling past the bottom
  scrollOffMargin: 2 # how many lines to keep before/after the cursor when it reaches the top/bottom of the view; see 'Scroll-off Margin' section below
  scrollOffBehavior: "margin" # one of 'margin' | 'jump'; see 'Scroll-off Margin' section below
  sidePanelWidth: 0.3333 # number from 0 to 1
  expandFocusedSidePanel: false
  mainPanelSplitMode: "flexible" # one of 'horizontal' | 'flexible' | 'vertical'
  enlargedSideViewLocation: "left" # one of 'left' | 'top'
  language: "en" # one of 'auto' | 'en' | 'zh' | 'pl' | 'nl' | 'ja' | 'ko'
  timeFormat: "2022-11-03" # https://pkg.go.dev/time#Time.Format
  shortTimeFormat: "23:59"
  theme:
    activeBorderColor:
      - "#a6e3a1" # Green
      - bold
    inactiveBorderColor:
      - "#cdd6f4" # Text
    optionsTextColor:
      - "#89b4fa" # Blue
    selectedLineBgColor:
      - "#313244" # Surface0
    selectedRangeBgColor:
      - "#313244" # Surface0
    cherryPickedCommitBgColor:
      - "#94e2d5" # Teal
    cherryPickedCommitFgColor:
      - "#89b4fa" # Blue
    unstagedChangesColor:
      - red # Red
    defaultFgColor:
      - default
  commitLength:
    show: true
  mouseEvents: true
  skipDiscardChangeWarning: false
  skipStashWarning: false
  showFileTree: true # for rendering changes files in a tree format
  showListFooter: true # for seeing the '5 of 20' message in list panels
  showRandomTip: false
  showBranchCommitHash: true # show commit hashes alongside branch names
  showBottomLine: false # for hiding the bottom information line (unless it has important information to tell you)
  showCommandLog: true
  nerdFontsVersion: "3" # nerd fonts version to use ("2" or "3"); empty means don't show nerd font icons
  showFileIcons: true # for hiding file icons in the file views
  commandLogSize: 8
  splitDiff: "auto" # one of 'auto' | 'always'
  skipRewordInEditorWarning: false # for skipping the confirmation before launching the reword editor
  border: "single" # one of 'single' | 'double' | 'rounded' | 'hidden'
  animateExplosion: true # shows an explosion animation when nuking the working tree
  portraitMode: "auto" # one of 'auto' | 'never' | 'always'
  filterMode: "substring" # one of 'substring' | 'fuzzy'; see 'Filtering' section below
git:
  paging:
    colorArg: always
    pager: delta --dark --paging=never
  commit:
    signOff: false
    autoWrapCommitMessage: true # automatic WYSIWYG wrapping of the commit message as you type
    autoWrapWidth: 72 # if autoWrapCommitMessage is true, the width to wrap to
  merging:
    # only applicable to unix users
    manualCommit: false
    # extra args passed to `git merge`, e.g. --no-ff
    args: ""
  log:
    # displays the whole git graph by default in the commits panel (equivalent to passing the `--all` argument to `git log`)
    showWholeGraph: false
  skipHookPrefix: WIP
  # The main branches. We colour commits green if they belong to one of these branches,
  # so that you can easily see which commits are unique to your branch (coloured in yellow)
  mainBranches: [master, main]
  autoFetch: true
  autoRefresh: true
  fetchAll: true # Pass --all flag when running git fetch. Set to false to fetch only origin (or the current branch's upstream remote if there is one)
  branchLogCmd: "git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --"
  allBranchesLogCmd: "git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium"
  overrideGpg: false # prevents lazygit from spawning a separate process when using GPG
  disableForcePushing: false
  parseEmoji: false
  truncateCopiedCommitHashesTo: 12 # When copying commit hashes to the clipboard, truncate them to this length. Set to 40 to disable truncation.
os:
  copyToClipboardCmd: "" # See 'Custom Command for Copying to Clipboard' section
  editPreset: "nvim" # see 'Configuring File editing' section
  edit: ""
  editAtLine: ""
  editAtLineAndWait: ""
  open: ""
  openLink: ""
refresher:
  refreshInterval: 10 # File/submodule refresh interval in seconds. Auto-refresh can be disabled via option 'git.autoRefresh'.
  fetchInterval: 60 # Re-fetch interval in seconds. Auto-fetch can be disabled via option 'git.autoFetch'.
update:
  method: prompt # can be: prompt | background | never
  days: 14 # how often an update is checked for
confirmOnQuit: false
# determines whether hitting 'esc' will quit the application when there is nothing to cancel/close
quitOnTopLevelReturn: false
disableStartupPopups: false
notARepository: "skip" # one of: 'prompt' | 'create' | 'skip' | 'quit'
promptToReturnFromSubprocess: true # display confirmation when subprocess terminates
keybinding:
  universal:
    quit: "q"
    quit-alt1: "<c-c>" # alternative/alias of quit
    return: "<esc>" # return to previous menu, will quit if there's nowhere to return
    quitWithoutChangingDirectory: "Q"
    togglePanel: "<tab>" # goto the next panel
    prevItem: "<up>" # go one line up
    nextItem: "<down>" # go one line down
    prevItem-alt: "k" # go one line up
    nextItem-alt: "j" # go one line down
    prevPage: "," # go to next page in list
    nextPage: "." # go to previous page in list
    gotoTop: "<" # go to top of list
    gotoBottom: ">" # go to bottom of list
    scrollLeft: "H" # scroll left within list view
    scrollRight: "L" # scroll right within list view
    prevBlock: "<left>" # goto the previous block / panel
    nextBlock: "<right>" # goto the next block / panel
    prevBlock-alt: "h" # goto the previous block / panel
    nextBlock-alt: "l" # goto the next block / panel
    jumpToBlock: ["1", "2", "3", "4", "5"] # goto the Nth block / panel
    nextMatch: "n"
    prevMatch: "N"
    optionMenu: <disabled> # show help menu
    optionMenu-alt1: "?" # show help menu
    select: "<space>"
    goInto: "<enter>"
    openRecentRepos: "<c-r>"
    confirm: "<enter>"
    remove: "d"
    new: "n"
    edit: "e"
    openFile: "o"
    scrollUpMain: "<pgup>" # main panel scroll up
    scrollDownMain: "<pgdown>" # main panel scroll down
    scrollUpMain-alt1: "K" # main panel scroll up
    scrollDownMain-alt1: "J" # main panel scroll down
    scrollUpMain-alt2: "<c-u>" # main panel scroll up
    scrollDownMain-alt2: "<c-d>" # main panel scroll down
    executeCustomCommand: ":"
    createRebaseOptionsMenu: "m"
    pushFiles: "P"
    pullFiles: "p"
    refresh: "R"
    createPatchOptionsMenu: "<c-p>"
    nextTab: "]"
    prevTab: "["
    nextScreenMode: "+"
    prevScreenMode: "_"
    undo: "z"
    redo: "<c-z>"
    filteringMenu: "<c-s>"
    diffingMenu: "W"
    diffingMenu-alt: "<c-e>" # deprecated
    copyToClipboard: "<c-o>"
    submitEditorText: "<enter>"
    extrasMenu: "@"
    toggleWhitespaceInDiffView: "<c-w>"
    increaseContextInDiffView: "}"
    decreaseContextInDiffView: "{"
    toggleRangeSelect: "v"
    rangeSelectUp: "<s-up>"
    rangeSelectDown: "<s-down>"
  status:
    checkForUpdate: "u"
    recentRepos: "<enter>"
  files:
    commitChanges: "c"
    commitChangesWithoutHook: "w" # commit changes without pre-commit hook
    amendLastCommit: "A"
    commitChangesWithEditor: "C"
    findBaseCommitForFixup: "<c-f>"
    confirmDiscard: "x"
    ignoreFile: "i"
    refreshFiles: "r"
    stashAllChanges: "s"
    viewStashOptions: "S"
    toggleStagedAll: "a" # stage/unstage all
    viewResetOptions: "D"
    fetch: "f"
    toggleTreeView: "`"
    openMergeTool: "M"
    openStatusFilter: "<c-b>"
  branches:
    createPullRequest: "o"
    viewPullRequestOptions: "O"
    checkoutBranchByName: "c"
    forceCheckoutBranch: "F"
    rebaseBranch: "r"
    renameBranch: "R"
    mergeIntoCurrentBranch: "M"
    viewGitFlowOptions: "i"
    fastForward: "f" # fast-forward this branch from its upstream
    createTag: "T"
    pushTag: "P"
    setUpstream: "u" # set as upstream of checked-out branch
    fetchRemote: "f"
  commits:
    squashDown: "s"
    renameCommit: "r"
    renameCommitWithEditor: "R"
    viewResetOptions: "g"
    markCommitAsFixup: "f"
    createFixupCommit: "F" # create fixup commit for this commit
    squashAboveCommits: "S"
    moveDownCommit: "<c-j>" # move commit down one
    moveUpCommit: "<c-k>" # move commit up one
    amendToCommit: "A"
    amendAttributeMenu: "a"
    pickCommit: "p" # pick commit (when mid-rebase)
    revertCommit: "t"
    cherryPickCopy: "C"
    pasteCommits: "V"
    tagCommit: "T"
    checkoutCommit: "<space>"
    resetCherryPick: "<c-R>"
    copyCommitMessageToClipboard: "<c-y>"
    openLogMenu: "<c-l>"
    viewBisectOptions: "b"
  stash:
    popStash: "g"
    renameStash: "r"
  commitFiles:
    checkoutCommitFile: "c"
  main:
    toggleSelectHunk: "a"
    pickBothHunks: "b"
  submodules:
    init: "i"
    update: "u"
    bulkMenu: "b"
  commitMessage:
    commitMenu: "<c-o>"
  amendAttribute:
    addCoAuthor: "c"
    resetAuthor: "a"
    setAuthor: "A"
